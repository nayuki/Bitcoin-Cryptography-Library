# 
# This makefile builds and runs the test programs in this directory. They check
# the functionality and correctness of the C++ cryptography implementations.
# 
# Requires a C++11 compiler, because of features like move constructors and
# libraries like cstdint being used.
# 
# Bitcoin cryptography library
# Copyright (c) Project Nayuki
# 
# https://www.nayuki.io/page/bitcoin-cryptography-library
# https://github.com/nayuki/Bitcoin-Cryptography-Library
# 


# ---- Configuration options ----

# External/implicit variables:
# - CXX: The C++ compiler, such as g++ or clang++.
# - CXXFLAGS: Any extra user-specified compiler flags (can be blank).
# - AR: The archiver, such as ar.

# Mandatory compiler flags
CXXFLAGS += -std=c++11
# Diagnostics. Adding '-fsanitize=address' is helpful for most versions of Clang and newer versions of GCC.
# add  -fsanitize-undefined-trap-on-error to use UBSan without its library
CXXFLAGS += -Wall -fsanitize=undefined  -fsanitize-undefined-trap-on-error
# Optimization level
CXXFLAGS += -O1
# Choose "pure-cpp" or "x8664"
IMPLEMENTATION = pure-cpp


# ---- Controlling make ----

# Clear default suffix rules
.SUFFIXES:

# Don't delete object files
.SECONDARY:

# Stuff concerning goals
.DEFAULT_GOAL = all
.PHONY: all check clean


# ---- Targets to build ----

LIB = bitcoincrypto
LIBFILE = lib$(LIB).a
LIBSRC = Base58Check.cpp CurvePoint.cpp Ecdsa.cpp ExtendedPrivateKey.cpp FieldInt.cpp Keccak256.cpp Ripemd160.cpp Sha256.cpp Sha256Hash.cpp Sha512.cpp Uint256.cpp Utils.cpp
LIBOBJ := $(LIBSRC:%.cpp=%.o)
ifeq ($(IMPLEMENTATION), x8664)
    LIBSRC += AsmX8664.s
    LIBOBJ += AsmX8664.o
    CXXFLAGS += -DUSE_X8664_ASM_IMPL
endif
TESTS = Base58CheckTest CurvePointTest EcdsaTest ExtendedPrivateKeyTest FieldIntTest Keccak256Test Ripemd160Test Sha256HashTest Sha256Test Sha512Test Uint256Test

# Build all binaries
all: $(LIBFILE) $(TESTS) EcdsaOpCount

# Run tests
check: $(TESTS)
	@for name in $^; do echo ./$$name; ./$$name; done

# Delete build output
clean:
	rm -f -- $(LIBOBJ) $(LIBFILE) $(TESTS:=.o) $(TESTS) EcdsaOpCount
	rm -rf .deps

# Executable files
%: %.o $(LIBFILE)
	$(CXX) $(CXXFLAGS) -o $@ $< -L . -l $(LIB)

# Special executable
EcdsaOpCount: EcdsaOpCount.cpp $(LIBSRC)
	$(CXX) $(CXXFLAGS) -DCOUNT_OPS -DNDEBUG -o $@ $^

# The library
$(LIBFILE): $(LIBOBJ)
	$(AR) -crs $@ -- $^

# Object files
%.o: %.cpp .deps/timestamp
	$(CXX) $(CXXFLAGS) -c -o $@ -MMD -MF .deps/$*.d $<

AsmX8664.o: AsmX8664.s
	$(CXX) $(CXXFLAGS) -c -o $@ $<

# Have a place to store header dependencies automatically generated by compiler
.deps/timestamp:
	mkdir -p .deps
	touch .deps/timestamp

# Make use of said dependencies if available
-include .deps/*.d
